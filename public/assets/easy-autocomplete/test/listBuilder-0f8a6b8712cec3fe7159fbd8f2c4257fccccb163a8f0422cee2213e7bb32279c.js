QUnit.test("ListBuilder",function(t){var e=new EasyAutocomplete.ListBuilderService;t.ok("function"==typeof EasyAutocomplete.ListBuilderService,"Constructor found"),t.ok(e,"Constructor"),t.ok("object"==typeof e,"created object"),t.ok("function"==typeof e.init,"ListBuilderService has method init"),t.ok("function"==typeof e.updateCategories,"ListBuilderService has method updateCategories"),t.ok("function"==typeof e.convertXml,"ListBuilderService has method convertXml"),t.ok("function"==typeof e.processData,"ListBuilderService has method processData"),t.ok("function"==typeof e.checkIfDataExists,"ListBuilderService has method checkIfDataExists"),expect(8)}),QUnit.test("ListBuilder - init",function(t){var e={},i={get:function(t){switch(t){case"listLocation":return function(){return e};case"getValue":return function(){return"bar"};case"list":return{maxNumberOfElements:function(){return 3}}}}},s=new EasyAutocomplete.ListBuilderService(i).init(e);t.ok(1===s.length,"ListBuilder - size"),t.ok(s[0].data===e,"ListBuilder - data match"),t.ok(s[0].getValue.toString()==i.get("getValue").toString(),"ListBuilder - getValue function match"),expect(3)}),QUnit.test("ListBuilder - checkIfDataExists - empty listBuilders",function(t){var e={},i=[{}],s=new EasyAutocomplete.ListBuilderService(e).checkIfDataExists(i);t.ok(!1===s,"checkIfDataExists"),expect(1)}),QUnit.test("ListBuilder - checkIfDataExists - listBuilders.data not array",function(t){var e={},i=[{data:1}],s=new EasyAutocomplete.ListBuilderService(e).checkIfDataExists(i);t.ok(!1===s,"checkIfDataExists"),expect(1)}),QUnit.test("ListBuilder - checkIfDataExists - listBuilders.data array",function(t){var e={},i=[{data:[1,2]}],s=new EasyAutocomplete.ListBuilderService(e).checkIfDataExists(i);t.ok(!0===s,"checkIfDataExists"),expect(1)});